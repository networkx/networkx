[build-system]
build-backend = 'setuptools.build_meta'
requires = ['setuptools>=61.2']

[project]
name = 'networkx'
description = 'Python package for creating and manipulating graphs and networks'
readme = 'README.rst'
requires-python = '>=3.9'
dynamic = ['version']
keywords = [
    'Networks',
    'Graph Theory',
    'Mathematics',
    'network',
    'graph',
    'discrete mathematics',
    'math',
]
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Intended Audience :: Developers',
    'Intended Audience :: Science/Research',
    'License :: OSI Approved :: BSD License',
    'Operating System :: OS Independent',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3 :: Only',
    'Topic :: Software Development :: Libraries :: Python Modules',
    'Topic :: Scientific/Engineering :: Bio-Informatics',
    'Topic :: Scientific/Engineering :: Information Analysis',
    'Topic :: Scientific/Engineering :: Mathematics',
    'Topic :: Scientific/Engineering :: Physics',
]
dependencies = []

[[project.authors]]
name = 'Aric Hagberg'
email = 'hagberg@lanl.gov'

[[project.maintainers]]
name = 'NetworkX Developers'
email = 'networkx-discuss@googlegroups.com'

[project.urls]
Homepage = 'https://networkx.org/'
"Bug Tracker" = 'https://github.com/networkx/networkx/issues'
Documentation = 'https://networkx.org/documentation/stable/'
"Source Code" = 'https://github.com/networkx/networkx'

[project.entry-points."networkx.backends"]
nx-loopback = 'networkx.classes.tests.dispatch_interface:dispatcher'

[project.optional-dependencies]
default = [
    'numpy>=1.22',
    'scipy>=1.9,!=1.11.0,!=1.11.1',
    'matplotlib>=3.5',
    'pandas>=1.4',
]
developer = [
    'pre-commit>=3.2',
    'mypy>=1.1',
    'rtoml',
]
doc = [
    'sphinx>=7',
    'pydata-sphinx-theme>=0.14',
    'sphinx-gallery>=0.14',
    'numpydoc>=1.6',
    'pillow>=9.4',
    'nb2plots>=0.7',
    'texext>=0.6.7',
    'nbconvert<7.9',
]
extra = [
    'lxml>=4.6',
    'pygraphviz>=1.11',
    'pydot>=1.4.2',
    'sympy>=1.10',
]
test = [
    'pytest>=7.2',
    'pytest-cov>=4.0',
]

[tool.setuptools]
zip-safe = false
include-package-data = false
packages = [
    'networkx',
    'networkx.algorithms',
    'networkx.algorithms.assortativity',
    'networkx.algorithms.bipartite',
    'networkx.algorithms.centrality',
    'networkx.algorithms.community',
    'networkx.algorithms.components',
    'networkx.algorithms.connectivity',
    'networkx.algorithms.coloring',
    'networkx.algorithms.flow',
    'networkx.algorithms.minors',
    'networkx.algorithms.traversal',
    'networkx.algorithms.isomorphism',
    'networkx.algorithms.shortest_paths',
    'networkx.algorithms.link_analysis',
    'networkx.algorithms.operators',
    'networkx.algorithms.approximation',
    'networkx.algorithms.tree',
    'networkx.classes',
    'networkx.generators',
    'networkx.drawing',
    'networkx.linalg',
    'networkx.readwrite',
    'networkx.readwrite.json_graph',
    'networkx.tests',
    'networkx.utils',
]
platforms = [
    'Linux',
    'Mac OSX',
    'Windows',
    'Unix',
]

[tool.setuptools.dynamic.version]
attr = 'networkx.__version__'

[tool.setuptools.package-data]
networkx = ['tests/*.py']
"networkx.algorithms" = ['tests/*.py']
"networkx.algorithms.assortativity" = ['tests/*.py']
"networkx.algorithms.bipartite" = ['tests/*.py']
"networkx.algorithms.centrality" = ['tests/*.py']
"networkx.algorithms.community" = ['tests/*.py']
"networkx.algorithms.components" = ['tests/*.py']
"networkx.algorithms.connectivity" = ['tests/*.py']
"networkx.algorithms.coloring" = ['tests/*.py']
"networkx.algorithms.minors" = ['tests/*.py']
"networkx.algorithms.flow" = [
    'tests/*.py',
    'tests/*.bz2',
]
"networkx.algorithms.isomorphism" = [
    'tests/*.py',
    'tests/*.*99',
]
"networkx.algorithms.link_analysis" = ['tests/*.py']
"networkx.algorithms.approximation" = ['tests/*.py']
"networkx.algorithms.operators" = ['tests/*.py']
"networkx.algorithms.shortest_paths" = ['tests/*.py']
"networkx.algorithms.traversal" = ['tests/*.py']
"networkx.algorithms.tree" = ['tests/*.py']
"networkx.classes" = ['tests/*.py']
"networkx.generators" = [
    'tests/*.py',
    'atlas.dat.gz',
]
"networkx.drawing" = [
    'tests/*.py',
    'tests/baseline/*png',
]
"networkx.linalg" = ['tests/*.py']
"networkx.readwrite" = ['tests/*.py']
"networkx.readwrite.json_graph" = ['tests/*.py']
"networkx.utils" = ['tests/*.py']

[tool.ruff]
line-length = 88
target-version = 'py39'
select = [
    'I',
    'UP',
    'C4',
    'E713',
    'PIE',
    'PGH003',
    'PLR0402',
    'SIM101',
    'SIM109',
    'SIM110',
    'SIM111',
    'SIM118',
    'SIM2',
]

[tool.ruff.per-file-ignores]
"__init__.py" = ['I']
"examples/*.py" = ['I']
"doc/*.py" = ['I']
"tools/*.py" = ['I']
"networkx/classes/filters.py" = ['C416']

[tool.mypy]
ignore_missing_imports = true
exclude = 'subgraphviews|reportviews'

[[tool.mypy.overrides]]
module = 'networkx.classes.reportviews'
ignore_errors = true
