[metadata]
name = networkx
author = Aric Hagberg
author_email = hagberg@lanl.gov
maintainer = NetworkX Developers
maintainer_email = networkx-discuss@googlegroups.com
description = Python package for creating and manipulating graphs and networks
keywords = Networks, Graph Theory, Mathematics, network, graph, discrete mathematics, math
url = http://networkx.github.io/
long_description = file: README.rst
classifiers =
    Development Status :: 5 - Production/Stable
    Intended Audience :: Developers
    Intended Audience :: Science/Research
    License :: OSI Approved :: BSD License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3 :: Only
    Topic :: Software Development :: Libraries :: Python Modules
    Topic :: Scientific/Engineering :: Bio-Informatics
    Topic :: Scientific/Engineering :: Information Analysis
    Topic :: Scientific/Engineering :: Mathematics
    Topic :: Scientific/Engineering :: Physics
platforms = Linux, Mac OSX, Windows, Unix

project_urls =
    Bug Tracker = https://github.com/networkx/networkx/issues
    Documentation = https://networkx.github.io/documentation/stable/
    Source Code = https://github.com/networkx/networkx"


[options]
packages =
    networkx
    networkx.algorithms
    networkx.algorithms.assortativity
    networkx.algorithms.bipartite
    networkx.algorithms.node_classification
    networkx.algorithms.centrality
    networkx.algorithms.community
    networkx.algorithms.components
    networkx.algorithms.connectivity
    networkx.algorithms.coloring
    networkx.algorithms.flow
    networkx.algorithms.traversal
    networkx.algorithms.isomorphism
    networkx.algorithms.shortest_paths
    networkx.algorithms.link_analysis
    networkx.algorithms.operators
    networkx.algorithms.approximation
    networkx.algorithms.tree
    networkx.classes
    networkx.generators
    networkx.drawing
    networkx.linalg
    networkx.readwrite
    networkx.readwrite.json_graph
    networkx.tests
    networkx.testing
    networkx.utils
zip_safe = False
install_requires = decorator>=4.3.0
python_requires = >=3.6
include_package_data = True
setup_requires = setuptools>=44; wheel; setuptools_scm[toml]>=3.4.3

[options.extras_require]
all =
    numpy
    scipy
    pandas
    matplotlib
    pygraphviz
    pydot
    pyyaml
    gdal
    lxml
    pytest
gdal = gdal
lxml = lxml
matplotlib = matplotlib
pytest = pytest
numpy = numpy
pandas = pandas
pydot = pydot
pygraphviz = pygraphviz
pyyaml = pyyaml
scipy = scipy

[options.package_data]
networkx = tests/*.py
networkx.algorithms = tests/*.py
networkx.algorithms.assortativity = tests/*.py
networkx.algorithms.bipartite = tests/*.py
networkx.algorithms.node_classification = tests/*.py
networkx.algorithms.centrality = tests/*.py
networkx.algorithms.community = tests/*.py
networkx.algorithms.components = tests/*.py
networkx.algorithms.connectivity = tests/*.py
networkx.algorithms.coloring = tests/*.py
networkx.algorithms.flow = tests/*.py; tests/*.bz2
networkx.algorithms.isomorphism = tests/*.py; tests/*.*99
networkx.algorithms.link_analysis = tests/*.py
networkx.algorithms.approximation = tests/*.py
networkx.algorithms.operators = tests/*.py
networkx.algorithms.shortest_paths = tests/*.py
networkx.algorithms.traversal = tests/*.py
networkx.algorithms.tree = tests/*.py
networkx.classes = tests/*.py
networkx.generators = tests/*.py; atlas.dat.gz
networkx.drawing = tests/*.py
networkx.linalg = tests/*.py
networkx.readwrite = tests/*.py
networkx.readwrite.json_graph = tests/*.py
networkx.testing = tests/*.py
networkx.utils = tests/*.py
